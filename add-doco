#!/usr/bin/env lua5.1

local function shift_left(lines)
  table.insert(lines, 1, '-- NOT SHIFTED LEFT YET')
end

local typefile = '/home/nr/asterius/ghc/compiler/GHC/Driver/Backend/Types.hs'

local of_interest = { }

do
  local skipping = true
  for l in io.lines(typefile) do
    if skipping and l:find '^%s+Backend %{' then
      skipping = true
    elseif l:find '^%s+%}%s*$' then
      break
    else
      table.insert(of_interest, l)
    end
  end
end


local doctab = { } -- function name |--> lines

local function capture_before(fname, i)
  local lines = { }
  repeat
    i = i - 1
    table.insert(lines, 1, of_interest[i])
  until of_interest[i]:find '^%s*%-%-%s+%|'
  shift_left(lines)
  assert(doctab[fname] == nil)
  doctab[fname] = lines
end

for i = 1, #of_interest do
  local fname = of_interest[i]:match '^%s*,?%s*(backend%w*)%s+::'
  if fname then
    capture_before(fname, i)
  end
end

if false then
  for k, v in pairs(doctab) do
    io.stdout:write '\n'
    io.stdout:write(k, '\n')
    for _, l in ipairs(v) do
      io.stdout:write('  ', l, '\n')
    end
  end
end

local missing = { '-- | DOCUMENTATION FOR THIS FUNCTION IS MISSING' }

for code in io.lines() do
  local fname = code:match '^(%w+) ::'
  if fname then
    local doc = doctab[fname] or missing
    for _, d in ipairs(doc) do
      io.stdout:write(d, '\n')
    end
  end
  io.stdout:write(code, '\n')
end

